{"ast":null,"code":"var _jsxFileName = \"/Users/deeps/Desktop/backup project/blockHunt/client/src/pages/HackathonsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport HackathonCard from '../components/HackathonCard';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HackathonsPage = () => {\n  _s();\n  const [hackathons, setHackathons] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const user = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    const fetchHackathons = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get('http://localhost:3000/api/hackathons');\n        // Sort hackathons - active ones first\n        const sortedHackathons = response.data.sort((a, b) => {\n          // If a is active and b is not, a comes first\n          if (a.status === 'active' && b.status !== 'active') return -1;\n          // If b is active and a is not, b comes first\n          if (b.status === 'active' && a.status !== 'active') return 1;\n          // Otherwise, maintain original order\n          return 0;\n        });\n        setHackathons(sortedHackathons);\n      } catch (err) {\n        console.error('Fetch hackathons error:', err);\n        toast.error('Failed to load hackathons');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchHackathons();\n  }, []);\n\n  // Make sure any modifications to hackathons maintain the sorting\n  const updateHackathon = (id, updates) => {\n    const updatedHackathons = hackathons.map(h => h.id === id ? {\n      ...h,\n      ...updates\n    } : h);\n\n    // Re-sort after updating to maintain active-first order\n    const sortedUpdatedHackathons = updatedHackathons.sort((a, b) => {\n      if (a.status === 'active' && b.status !== 'active') return -1;\n      if (b.status === 'active' && a.status !== 'active') return 1;\n      return 0;\n    });\n    setHackathons(sortedUpdatedHackathons);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"Hackathons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), hackathons.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hackathons available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : hackathons.map(hackathon => /*#__PURE__*/_jsxDEV(HackathonCard, {\n      hackathon: hackathon,\n      user: user,\n      isOrganizer: (user === null || user === void 0 ? void 0 : user.role) === 'organizer' && (user === null || user === void 0 ? void 0 : user.id) === hackathon.organizer_id,\n      onFund: id => {\n        updateHackathon(id, {\n          funded_amount: hackathon.prize_pool,\n          funded_at: new Date().toISOString()\n        });\n      },\n      onEnd: id => {\n        updateHackathon(id, {\n          status: 'ended',\n          manually_ended: true,\n          manually_ended_at: new Date().toISOString()\n        });\n      }\n    }, hackathon.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(HackathonsPage, \"pIaV2Js1nvh7P97uAyLGEi9KyT0=\");\n_c = HackathonsPage;\nexport default HackathonsPage;\nvar _c;\n$RefreshReg$(_c, \"HackathonsPage\");","map":{"version":3,"names":["React","useState","useEffect","HackathonCard","axios","toast","jsxDEV","_jsxDEV","HackathonsPage","_s","hackathons","setHackathons","loading","setLoading","user","JSON","parse","localStorage","getItem","fetchHackathons","response","get","sortedHackathons","data","sort","a","b","status","err","console","error","updateHackathon","id","updates","updatedHackathons","map","h","sortedUpdatedHackathons","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","length","hackathon","isOrganizer","organizer_id","onFund","funded_amount","prize_pool","funded_at","Date","toISOString","onEnd","manually_ended","manually_ended_at","_c","$RefreshReg$"],"sources":["/Users/deeps/Desktop/backup project/blockHunt/client/src/pages/HackathonsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport HackathonCard from '../components/HackathonCard';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst HackathonsPage = () => {\n  const [hackathons, setHackathons] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  useEffect(() => {\n    const fetchHackathons = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get('http://localhost:3000/api/hackathons');\n        // Sort hackathons - active ones first\n        const sortedHackathons = response.data.sort((a, b) => {\n          // If a is active and b is not, a comes first\n          if (a.status === 'active' && b.status !== 'active') return -1;\n          // If b is active and a is not, b comes first\n          if (b.status === 'active' && a.status !== 'active') return 1;\n          // Otherwise, maintain original order\n          return 0;\n        });\n        setHackathons(sortedHackathons);\n      } catch (err) {\n        console.error('Fetch hackathons error:', err);\n        toast.error('Failed to load hackathons');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchHackathons();\n  }, []);\n\n  // Make sure any modifications to hackathons maintain the sorting\n  const updateHackathon = (id, updates) => {\n    const updatedHackathons = hackathons.map(h => \n      h.id === id ? { ...h, ...updates } : h\n    );\n    \n    // Re-sort after updating to maintain active-first order\n    const sortedUpdatedHackathons = updatedHackathons.sort((a, b) => {\n      if (a.status === 'active' && b.status !== 'active') return -1;\n      if (b.status === 'active' && a.status !== 'active') return 1;\n      return 0;\n    });\n    \n    setHackathons(sortedUpdatedHackathons);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-6\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"visually-hidden\"></span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mt-6\">\n      <h2 className=\"text-2xl font-semibold mb-4\">Hackathons</h2>\n      {hackathons.length === 0 ? (\n        <p>No hackathons available.</p>\n      ) : (\n        hackathons.map((hackathon) => (\n          <HackathonCard\n            key={hackathon.id}\n            hackathon={hackathon}\n            user={user}\n            isOrganizer={user?.role === 'organizer' && user?.id === hackathon.organizer_id}\n            onFund={(id) => {\n              updateHackathon(id, {\n                funded_amount: hackathon.prize_pool,\n                funded_at: new Date().toISOString()\n              });\n            }}\n            onEnd={(id) => {\n              updateHackathon(id, {\n                status: 'ended',\n                manually_ended: true,\n                manually_ended_at: new Date().toISOString()\n              });\n            }}\n          />\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default HackathonsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}