{"ast":null,"code":"var _jsxFileName = \"/Users/deeps/Desktop/backup project/blockHunt/client/src/components/SubmissionTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SubmissionTable = ({\n  submissions,\n  hackathon,\n  onSetWinners,\n  onDistributePrizes\n}) => {\n  _s();\n  const [selectedWinners, setSelectedWinners] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Handle checkbox selection\n  const handleWinnerSelection = publicKey => {\n    if (selectedWinners.includes(publicKey)) {\n      // If already selected, remove from array\n      setSelectedWinners(selectedWinners.filter(key => key !== publicKey));\n    } else {\n      // If not selected and we have less than 3 winners, add to array\n      if (selectedWinners.length < 3) {\n        setSelectedWinners([...selectedWinners, publicKey]);\n      } else {\n        toast.warning('You can select at most 3 winners');\n      }\n    }\n  };\n\n  // Determine if a submission is already a winner\n  const isWinner = publicKey => {\n    if (hackathon.winners && Array.isArray(JSON.parse(hackathon.winners))) {\n      return JSON.parse(hackathon.winners).some(winner => winner.public_key === publicKey);\n    }\n    return false;\n  };\n\n  // Handle setting winners\n  const handleSetWinners = async () => {\n    if (selectedWinners.length === 0) {\n      toast.error('Please select at least one winner');\n      return;\n    }\n\n    // Validate Ethereum addresses\n    for (const address of selectedWinners) {\n      if (!ethers.isAddress(address)) {\n        toast.error(`Invalid Ethereum address: ${address}`);\n        return;\n      }\n    }\n    setIsSubmitting(true);\n    try {\n      const token = localStorage.getItem('token');\n      // Fix: Store response but use it for transaction hash display\n      const response = await axios.post(`http://localhost:3000/api/hackathons/${hackathon.id}/set-winners`, {\n        winners: selectedWinners\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      // Use the response to show transaction hash\n      toast.success(`Winners set successfully! Transaction Hash: ${response.data.transactionHash}`);\n\n      // Call the parent component's callback to update hackathon data\n      onSetWinners();\n\n      // Clear selection\n      setSelectedWinners([]);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error setting winners:', error);\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to set winners');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Render no submissions message if there are none\n  if (!submissions || submissions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No submissions yet for this hackathon.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if winners are already selected\n  const hasWinners = hackathon.winners && Array.isArray(JSON.parse(hackathon.winners)) && JSON.parse(hackathon.winners).length > 0;\n\n  // Check if prizes are already distributed\n  const prizesDistributed = hackathon.prizes_distributed || false;\n\n  // Parse winners once to avoid repeated parsing\n  const parsedWinners = hasWinners ? JSON.parse(hackathon.winners) : [];\n  const winnerCount = parsedWinners.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"submission-table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"table-dark\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Project Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"GitHub URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Participant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Public Key\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Submission Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), !hasWinners && !prizesDistributed && /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Select as Winner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), hasWinners && /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Winner Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: submissions.map(submission => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: submission.project_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: submission.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: submission.github_url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: submission.github_url\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: submission.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: [submission.public_key.slice(0, 10), \"...\", submission.public_key.slice(-8)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(submission.created_at).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), !hasWinners && !prizesDistributed && /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  className: \"form-check-input\",\n                  id: `winner-${submission.id}`,\n                  checked: selectedWinners.includes(submission.public_key),\n                  onChange: () => handleWinnerSelection(submission.public_key),\n                  disabled: prizesDistributed || isSubmitting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  htmlFor: `winner-${submission.id}`,\n                  children: \"Select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), hasWinners && /*#__PURE__*/_jsxDEV(\"td\", {\n              children: isWinner(submission.public_key) ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge bg-success\",\n                children: \"Winner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge bg-secondary\",\n                children: \"Not Selected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this)]\n          }, submission.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), !hasWinners && !prizesDistributed && selectedWinners.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Selected Winners (\", selectedWinners.length, \"/3):\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: selectedWinners.map((winner, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [winner.slice(0, 10), \"...\", winner.slice(-8), index === 0 && \" (1st Place - 50% or 70% or 100%)\", index === 1 && \" (2nd Place - 30%)\", index === 2 && \" (3rd Place - 20%)\"]\n          }, winner, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Prize Distribution:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"mb-0\",\n            children: [selectedWinners.length === 1 && /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Single winner receives 100% of the prize pool\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 50\n            }, this), selectedWinners.length === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"1st place: 70% of prize pool\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"2nd place: 30% of prize pool\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), selectedWinners.length === 3 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"1st place: 50% of prize pool\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"2nd place: 30% of prize pool\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"3rd place: 20% of prize pool\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary me-2\",\n        onClick: handleSetWinners,\n        disabled: isSubmitting,\n        children: isSubmitting ? 'Processing...' : 'Set Winners'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), hasWinners && !prizesDistributed && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Winners:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: parsedWinners.map((winner, index) => {\n            const address = winner.public_key;\n            let percentage = \"100%\";\n            if (winnerCount === 2) {\n              percentage = index === 0 ? \"70%\" : \"30%\";\n            } else if (winnerCount === 3) {\n              percentage = index === 0 ? \"50%\" : index === 1 ? \"30%\" : \"20%\";\n            }\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [address.slice(0, 10), \"...\", address.slice(-8), \" (\", percentage, \")\"]\n            }, address, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: onDistributePrizes,\n        disabled: isSubmitting,\n        children: isSubmitting ? 'Processing...' : 'Distribute Prizes'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this), prizesDistributed && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Prizes have been distributed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The prize fund of \", hackathon.funded_amount, \" ETH has been distributed to the winners.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: parsedWinners.map((winner, index) => {\n          const address = winner.public_key;\n          let percentage = \"100%\";\n          let amount = hackathon.funded_amount;\n          if (winnerCount === 2) {\n            percentage = index === 0 ? \"70%\" : \"30%\";\n            amount = index === 0 ? (hackathon.funded_amount * 0.7).toFixed(4) : (hackathon.funded_amount * 0.3).toFixed(4);\n          } else if (winnerCount === 3) {\n            if (index === 0) {\n              percentage = \"50%\";\n              amount = (hackathon.funded_amount * 0.5).toFixed(4);\n            } else if (index === 1) {\n              percentage = \"30%\";\n              amount = (hackathon.funded_amount * 0.3).toFixed(4);\n            } else {\n              percentage = \"20%\";\n              amount = (hackathon.funded_amount * 0.2).toFixed(4);\n            }\n          }\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [address.slice(0, 10), \"...\", address.slice(-8), \": \", amount, \" ETH (\", percentage, \")\"]\n          }, address, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Distributed at:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), \" \", hackathon.prizes_distributed_at ? new Date(hackathon.prizes_distributed_at).toLocaleString() : 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(SubmissionTable, \"BKI/t7Az34Zo07LmytUoq0zbsrI=\");\n_c = SubmissionTable;\nexport default SubmissionTable;\nvar _c;\n$RefreshReg$(_c, \"SubmissionTable\");","map":{"version":3,"names":["React","useState","toast","axios","ethers","jsxDEV","_jsxDEV","Fragment","_Fragment","SubmissionTable","submissions","hackathon","onSetWinners","onDistributePrizes","_s","selectedWinners","setSelectedWinners","isSubmitting","setIsSubmitting","handleWinnerSelection","publicKey","includes","filter","key","length","warning","isWinner","winners","Array","isArray","JSON","parse","some","winner","public_key","handleSetWinners","error","address","isAddress","token","localStorage","getItem","response","post","id","headers","Authorization","success","data","transactionHash","_error$response","_error$response$data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","hasWinners","prizesDistributed","prizes_distributed","parsedWinners","winnerCount","className","map","submission","project_name","description","href","github_url","target","rel","email","slice","Date","created_at","toLocaleString","type","checked","onChange","disabled","htmlFor","index","onClick","percentage","funded_amount","amount","toFixed","prizes_distributed_at","_c","$RefreshReg$"],"sources":["/Users/deeps/Desktop/backup project/blockHunt/client/src/components/SubmissionTable.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { ethers } from 'ethers';\n\nconst SubmissionTable = ({ submissions, hackathon, onSetWinners, onDistributePrizes }) => {\n  const [selectedWinners, setSelectedWinners] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Handle checkbox selection\n  const handleWinnerSelection = (publicKey) => {\n    if (selectedWinners.includes(publicKey)) {\n      // If already selected, remove from array\n      setSelectedWinners(selectedWinners.filter(key => key !== publicKey));\n    } else {\n      // If not selected and we have less than 3 winners, add to array\n      if (selectedWinners.length < 3) {\n        setSelectedWinners([...selectedWinners, publicKey]);\n      } else {\n        toast.warning('You can select at most 3 winners');\n      }\n    }\n  };\n\n  // Determine if a submission is already a winner\n  const isWinner = (publicKey) => {\n    if (hackathon.winners && Array.isArray(JSON.parse(hackathon.winners))) {\n      return JSON.parse(hackathon.winners).some(winner => winner.public_key === publicKey);\n    }\n    return false;\n  };\n\n  // Handle setting winners\n  const handleSetWinners = async () => {\n    if (selectedWinners.length === 0) {\n      toast.error('Please select at least one winner');\n      return;\n    }\n\n    // Validate Ethereum addresses\n    for (const address of selectedWinners) {\n      if (!ethers.isAddress(address)) {\n        toast.error(`Invalid Ethereum address: ${address}`);\n        return;\n      }\n    }\n\n    setIsSubmitting(true);\n    try {\n      const token = localStorage.getItem('token');\n      // Fix: Store response but use it for transaction hash display\n      const response = await axios.post(\n        `http://localhost:3000/api/hackathons/${hackathon.id}/set-winners`,\n        { winners: selectedWinners },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      // Use the response to show transaction hash\n      toast.success(`Winners set successfully! Transaction Hash: ${response.data.transactionHash}`);\n      \n      // Call the parent component's callback to update hackathon data\n      onSetWinners();\n      \n      // Clear selection\n      setSelectedWinners([]);\n    } catch (error) {\n      console.error('Error setting winners:', error);\n      toast.error(error.response?.data?.error || 'Failed to set winners');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Render no submissions message if there are none\n  if (!submissions || submissions.length === 0) {\n    return <p>No submissions yet for this hackathon.</p>;\n  }\n\n  // Check if winners are already selected\n  const hasWinners = hackathon.winners && \n                    Array.isArray(JSON.parse(hackathon.winners)) && \n                    JSON.parse(hackathon.winners).length > 0;\n\n  // Check if prizes are already distributed\n  const prizesDistributed = hackathon.prizes_distributed || false;\n\n  // Parse winners once to avoid repeated parsing\n  const parsedWinners = hasWinners ? JSON.parse(hackathon.winners) : [];\n  const winnerCount = parsedWinners.length;\n\n  return (\n    <div className=\"submission-table-container\">\n      <div className=\"table-responsive\">\n        <table className=\"table table-bordered table-striped\">\n          <thead className=\"table-dark\">\n            <tr>\n              <th>Project Name</th>\n              <th>Description</th>\n              <th>GitHub URL</th>\n              <th>Participant</th>\n              <th>Public Key</th>\n              <th>Submission Date</th>\n              {!hasWinners && !prizesDistributed && (\n                <th>Select as Winner</th>\n              )}\n              {hasWinners && (\n                <th>Winner Status</th>\n              )}\n            </tr>\n          </thead>\n          <tbody>\n            {submissions.map((submission) => (\n              <tr key={submission.id}>\n                <td>{submission.project_name}</td>\n                <td>{submission.description}</td>\n                <td>\n                  <a href={submission.github_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {submission.github_url}\n                  </a>\n                </td>\n                <td>{submission.email}</td>\n                <td>\n                  <small className=\"text-muted\">\n                    {submission.public_key.slice(0, 10)}...{submission.public_key.slice(-8)}\n                  </small>\n                </td>\n                <td>{new Date(submission.created_at).toLocaleString()}</td>\n                {!hasWinners && !prizesDistributed && (\n                  <td>\n                    <div className=\"form-check\">\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-check-input\"\n                        id={`winner-${submission.id}`}\n                        checked={selectedWinners.includes(submission.public_key)}\n                        onChange={() => handleWinnerSelection(submission.public_key)}\n                        disabled={prizesDistributed || isSubmitting}\n                      />\n                      <label className=\"form-check-label\" htmlFor={`winner-${submission.id}`}>\n                        Select\n                      </label>\n                    </div>\n                  </td>\n                )}\n                {hasWinners && (\n                  <td>\n                    {isWinner(submission.public_key) ? (\n                      <span className=\"badge bg-success\">Winner</span>\n                    ) : (\n                      <span className=\"badge bg-secondary\">Not Selected</span>\n                    )}\n                  </td>\n                )}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      \n      {/* Winner selection controls */}\n      {!hasWinners && !prizesDistributed && selectedWinners.length > 0 && (\n        <div className=\"mt-3\">\n          <div className=\"alert alert-info\">\n            <strong>Selected Winners ({selectedWinners.length}/3):</strong>\n            <ol>\n              {selectedWinners.map((winner, index) => (\n                <li key={winner}>\n                  {winner.slice(0, 10)}...{winner.slice(-8)}\n                  {index === 0 && \" (1st Place - 50% or 70% or 100%)\"}\n                  {index === 1 && \" (2nd Place - 30%)\"}\n                  {index === 2 && \" (3rd Place - 20%)\"}\n                </li>\n              ))}\n            </ol>\n            <div className=\"alert alert-warning mt-2\">\n              <strong>Prize Distribution:</strong>\n              <ul className=\"mb-0\">\n                {selectedWinners.length === 1 && <li>Single winner receives 100% of the prize pool</li>}\n                {selectedWinners.length === 2 && (\n                  <>\n                    <li>1st place: 70% of prize pool</li>\n                    <li>2nd place: 30% of prize pool</li>\n                  </>\n                )}\n                {selectedWinners.length === 3 && (\n                  <>\n                    <li>1st place: 50% of prize pool</li>\n                    <li>2nd place: 30% of prize pool</li>\n                    <li>3rd place: 20% of prize pool</li>\n                  </>\n                )}\n              </ul>\n            </div>\n          </div>\n          <button \n            className=\"btn btn-primary me-2\" \n            onClick={handleSetWinners} \n            disabled={isSubmitting}\n          >\n            {isSubmitting ? 'Processing...' : 'Set Winners'}\n          </button>\n        </div>\n      )}\n      \n      {/* Prize distribution button - shown after winners are set but before prizes are distributed */}\n      {hasWinners && !prizesDistributed && (\n        <div className=\"mt-3\">\n          <div className=\"alert alert-info\">\n            <strong>Winners:</strong>\n            <ol>\n              {parsedWinners.map((winner, index) => {\n                const address = winner.public_key;\n                let percentage = \"100%\";\n                if (winnerCount === 2) {\n                  percentage = index === 0 ? \"70%\" : \"30%\";\n                } else if (winnerCount === 3) {\n                  percentage = index === 0 ? \"50%\" : (index === 1 ? \"30%\" : \"20%\");\n                }\n                \n                return (\n                  <li key={address}>\n                    {address.slice(0, 10)}...{address.slice(-8)} ({percentage})\n                  </li>\n                );\n              })}\n            </ol>\n          </div>\n          <button \n            className=\"btn btn-success\" \n            onClick={onDistributePrizes} \n            disabled={isSubmitting}\n          >\n            {isSubmitting ? 'Processing...' : 'Distribute Prizes'}\n          </button>\n        </div>\n      )}\n      \n      {/* Show distribution results if prizes are distributed */}\n      {prizesDistributed && (\n        <div className=\"alert alert-success mt-3\">\n          <strong>Prizes have been distributed!</strong>\n          <p>The prize fund of {hackathon.funded_amount} ETH has been distributed to the winners.</p>\n          <ol>\n            {parsedWinners.map((winner, index) => {\n              const address = winner.public_key;\n              let percentage = \"100%\";\n              let amount = hackathon.funded_amount;\n              \n              if (winnerCount === 2) {\n                percentage = index === 0 ? \"70%\" : \"30%\";\n                amount = index === 0 \n                  ? (hackathon.funded_amount * 0.7).toFixed(4) \n                  : (hackathon.funded_amount * 0.3).toFixed(4);\n              } else if (winnerCount === 3) {\n                if (index === 0) {\n                  percentage = \"50%\";\n                  amount = (hackathon.funded_amount * 0.5).toFixed(4);\n                } else if (index === 1) {\n                  percentage = \"30%\";\n                  amount = (hackathon.funded_amount * 0.3).toFixed(4);\n                } else {\n                  percentage = \"20%\";\n                  amount = (hackathon.funded_amount * 0.2).toFixed(4);\n                }\n              }\n              \n              return (\n                <li key={address}>\n                  {address.slice(0, 10)}...{address.slice(-8)}: {amount} ETH ({percentage})\n                </li>\n              );\n            })}\n          </ol>\n          <p className=\"mb-0\">\n            <strong>Distributed at:</strong> {hackathon.prizes_distributed_at ? new Date(hackathon.prizes_distributed_at).toLocaleString() : 'N/A'}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SubmissionTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}